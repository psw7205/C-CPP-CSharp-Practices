문제 1
#include<iostream>
using namespace std;

int main()
{
	int a, b;
	char c;

	while (1)
	{
		cout << "? ";
		cin >> a >> c >> b;
		if (c == '+')
			cout << a << " + " << b << " = " << a + b << endl;
		if (c == '-')
			cout << a << " - " << b << " = " << a - b << endl;
		if (c == '*')
			cout << a << " * " << b << " = " << a * b << endl;
		if (c == '/')
			cout << a << " / " << b << " = " << a / b << endl;
	}

	return 0;
}
-------------------------------------------------------------------------------
문제 2

#include<iostream>
#include<string>
using namespace std;

class Date {
	int m_y, m_m, m_d;
	string m_c;
public:
	Date(string c)
	{
		int s, s1;
		s = c.find("/");
		s1 = c.find("/", s+1);
		m_y = stoi(c.substr(0, s));
		m_m = stoi(c.substr(s+1, s1-s-1));
		m_d = stoi(c.substr(s1+1, c.length()));

		cout << m_m << endl;
	}

	Date(int y, int m, int d)
	{
		m_y = y;
		m_m = m;
		m_d = d;
	}
	void show()
	{
		cout << m_y << "년 " << m_m << "월 " << m_d << "일 " << endl;
	}

	int getYear()
	{
		return m_y;
	}
	int getMonth()
	{
		return m_m;
	}
	int getDay()
	{
		return m_d;
	}
};

int main() {
	Date birth(2014, 3, 20);
	Date iDay("1945 / 8/ 15");
	iDay.show();
	cout << birth.getYear() << ", " << birth.getMonth() << ", " << birth.getDay() << endl;
	return 0;

}

-------------------------------------------------------------------------------
문제 3
#include<iostream>
#include<string>
using namespace std;

class Circle {
	int radius;
public:
	void setRadius(int r);
	double getArea();
};

void Circle::setRadius(int r)
{
	radius = r;
}

double Circle::getArea()
{
	return radius * radius*3.14;
}

int main()
{
	int n = 0;

	cout << "원의 개수는 >>";
	cin >> n;;

	Circle *p = new Circle[n];

	int r = 0;

	for (int i = 0; i < n; i++)
	{
		cout << "원" << i + 1 << "의 반지름 >>";
		cin >> r ;
		p[i].setRadius(r);
	}

	cout << "면적이 100보다 큰 원은 ";
	
	int cnt=0;
	
	for(int i = 0 ; i < n; i++)
	{
		if (p[i].getArea() > 100)
			cnt++;
	}

	cout << cnt << "개입니다." << endl;

	delete[]p;

	return 0;
}


-------------------------------------------------------------------------------
문제 4

#include<iostream>
using namespace std;

class Accm {
	int value;
public:
	Accm(int v); 
	Accm& add(int n);
	int get();
};

Accm::Accm(int v)
{
	value = v;
}

Accm& Accm::add(int n)
{
	value += n;
	return *this;
}

int Accm::get()
{
	return value;
}

int main() 
{
	Accm acc(10);
	acc.add(5).add(6).add(7);
	cout << acc.get() << endl;
}

-------------------------------------------------------------------------------
문제 5

#include<iostream>
using namespace std;

class ArrayUtil {
public:
	static void doubleToInt(double src[], int dst[], int size);
};

void ArrayUtil::doubleToInt(double src[], int dst[], int size)
{
	for (int i = 0; i < size; i++)
	{
		dst[i] = (int)(src[i] + 0.5);
	}
}


int main() {
	
	int x[5];
	
	double y[] = { 9.9, 8.8, 7.1, 6.3, 5.6 };
	
	ArrayUtil::doubleToInt(y, x, 5);
	
	for (int i = 0; i<5; i++)
		cout << x[i] << " ";
};

-------------------------------------------------------------------------------
문제 6

#include<iostream>
using namespace std;

class Vector{
	int m_a, m_b, m_c, m_d;
public:
	Vector(){m_a = 0;m_b = 0;m_c = 0;m_d = 0; };
	Vector(int a, int b, int c, int d);

	void show();

	friend Vector operator+(Vector a, Vector b);
	Vector operator+=(Vector a);
};

Vector::Vector(int a, int b, int c, int d)
{
	m_a = a;
	m_b = b;
	m_c = c;
	m_d = d;
}

Vector operator+(Vector a, Vector b)
{
	Vector c;
	c.m_a = a.m_a + b.m_a; 
	c.m_b = a.m_b + b.m_b; 
	c.m_c = a.m_c + b.m_c; 
	c.m_d = a.m_d + b.m_d; 

	return c;
}

Vector Vector::operator+=(Vector a)
{
	m_a += a.m_a;
	m_b += a.m_b;
	m_c += a.m_c;
	m_d += a.m_d;

	return *this;
}

void Vector::show()
{
	cout << "Vector = { " << m_a << " " << m_b << " " << m_c << " " << m_d << " }"<<endl; 
}

int main()
{

	Vector a(1,2,3,4), b(2,3,4,5), c;

	c = a + b;

	a += b;

	a.show(); b.show(); c.show();

	return 0;
}
