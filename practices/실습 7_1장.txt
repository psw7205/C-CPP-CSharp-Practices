문제 1
#include<stdio.h>
#pragma warning(disable:4996)

int main()
{
	int arr[5] = { 0 };
	int i;
	double sum = 0;

	for(i = 0; i < 5;i++)
		scanf("%d", &arr[i]);

	for (i = 0; i < 5; i++)
		sum +=arr[i];

	sum = sum / 5;

	for (i = 0; i < 5; i++)
	{
		if (arr[i] > sum)
			printf("%d\n", arr[i]);
	}

	return 0;
}
==============================================================================
문제 2
#include<stdio.h>
#pragma warning(disable:4996)

int main()
{
	char arr[7] = { '\0' };
	int i, cnt = 0;

	for(i = 0; i < 7;i++)
		scanf("%c", &arr[i]);

	for (i = 0; i < 5; i++)
	{
		if (arr[i] == 'c' && arr[i + 1] == 'a' && arr[i + 2] == 't')
			cnt++;
	}

	printf("%d", cnt);

	return 0;
}
==============================================================================
문제 3
#include<stdio.h>
#pragma warning(disable:4996)
int main()
{	int arr[5] = { 0 };
	int i, j, tmp;
	for(i = 0; i < 5;i++)
		scanf("%d", &arr[i]);
	for (i = 0; i < 4; i++)
	{
		for (j = 0; j < 4 - i; j++)
		{
			if (arr[j] < arr[j + 1])
			{
				tmp = arr[j];
				arr[j] = arr[j + 1];
				arr[j + 1] = tmp;
			}
		}
	}
	printf("%d\n%d", arr[0], arr[1] );
	return 0;
}
==============================================================================
문제 4
#include<stdio.h>
#pragma warning(disable:4996)

int main()
{
	int arr[10] = { 0 };
	int i, j, cnt[3] = { 0 };

	for(i = 0; i < 10;i++)
		scanf("%d", &arr[i]);

	for (i = 0; i < 10; i++)
	{
		if (arr[i] == 1)
			cnt[0]++;

		if (arr[i] == 2)
			cnt[1]++;

		if (arr[i] == 3)
			cnt[2]++;
	}

	for (i = 0; i < 3; i++)
	{
		printf("%d:", i+1);
		for (j = 0; j < cnt[i]; j++)
			printf("*");
		printf("\n");
	}


	return 0;
}

==============================================================================
문제 5
#include<stdio.h>
#pragma warning(disable:4996)

int main()
{
	char arr[5] = { '\0' };
	int i, j;

	for(i = 0; i < 5;i++)
		scanf("%c", &arr[i]);

	for (i = 0; i < 5; i++)
	{
		for (j = 0; j < 5 ; j++)
			printf("%c", arr[(j+4*i)%5]);
		printf("\n");
	}

	return 0;
}

==============================================================================
문제 6 
#include<stdio.h>
#pragma warning(disable:4996)

int main()
{
	char c, ans[3] , arr[3] = { '\0' };

	int i, j;

	for (i = 0; i < 3; i++)
		scanf("%c", &arr[i]);
	getchar();

	for (i = 0; i < 3; i++)
		ans[i] = '_';

	for (i = 0; i < 5; i++)
	{
		scanf("%c", &c);
		getchar();

		for (j = 0; j < 3; j++)
		{
			if (arr[j] == c)
				ans[j] = arr[j];
		}

		for (j = 0; j < 3; j++)
			printf(" %c", ans[j]);

		if (ans[0] != '_' && ans[1] != '_' && ans[2] != '_')
			break;

		printf("\n");
	}

	return 0;
}

==============================================================================
문제 7

#include<stdio.h>
#pragma warning(disable:4996)

int main()
{
	int a[10] = { 0 };
	int cnt[10] = { 0 }, i, j;

	for (i = 0; i < 10; i++)
		scanf("%d", &a[i]);

	for (i = 0; i < 10; i++)
	{
		for (j = i; j < 10; j++)
		{
			if (a[i] == a[j]) // 앞에서 부터 중복을 찾으므로 중복숫자 중 제일 먼저 나온 숫자 위치가 제대로 카운트 됨
				cnt[i]++;
		}
	}

	for (i = 0; i < 10; i++)
	{
		for (j = 0; j < 10; j++)
		{
			if (a[i] == a[j]) // 앞에서 부터 중복을 검사함 제일 먼저 나온 중복된 숫자와 카운트 위치는 출력되고 뒤에있는 중복 숫자는 i가 j까지 증가하기 전에 앞에서 탈출하므로 출력에서 제외됨
				break;
		}
		if (i == j)
			printf("%d %d\n", a[i], cnt[i]);
	}

	return 0;
}

==============================================================================
문제 8

#include<stdio.h>
#pragma warning(disable:4996)
int main()
{
	int arr[5] = { 0 };
	int i, tmp;
	for (i = 0; i < 5; i++)
		scanf("%d", &arr[i]);

	for (i = 0; i < 4; i++)
	{
		if (arr[i] > arr[i + 1])
		{
			tmp = arr[i];
			arr[i] = arr[i + 1];
			arr[i + 1] = tmp;
		}
	}
	for (i = 0; i < 5; i++)
		printf("%d\n", arr[i]);
	return 0;
}

==============================================================================
문제 9
#include<stdio.h>
#pragma warning(disable:4996)
int main()
{
	int arr[5] = { 0 };
	int i, j, tmp;
	for (i = 0; i < 5; i++)
		scanf("%d", &arr[i]);
	for (i = 0; i < 4; i++)
	{
		for (j = 0; j < 4 - i; j++)
		{
			if (arr[j] > arr[j + 1])
			{
				tmp = arr[j];
				arr[j] = arr[j + 1];
				arr[j + 1] = tmp;
			}
		}
	}
	for (i = 0; i < 5; i++)
		printf("%d\n", arr[i] );
	return 0;
}