문제 A
#include<stdio.h>
#pragma warning(disable: 4996)

int main()
{
	int a, b, c; // 시험점수를 저장할 a, b, c입니다.
	double sum = 0; // 총 합계를 저장할 sum입니다.

	scanf("%d %d %d", &a, &b, &c);

	sum = 0.2 * (double)a; // a에 0.2를 곱해 sum에 저장합니다.
	sum = sum + 0.3 * (double)b; // b에 0.3를 곱해 sum에 저장합니다.
	sum = sum + 0.5 * (double)c; // c에 0.5를 곱해 sum에 저장합니다.

	printf("%.2lf", sum); // 소수점 2자리수까지 저장해 출력합니다.

	return 0;
}
------------------------------------------------------------------------------------
문제 B
#include<stdio.h>
#pragma warning(disable: 4996)

int main()
{
	int a, i, j, k = 1; // 입력받을 정수 n과 반복문에 사용할 i, j ,k입니다.

	scanf("%d", &a);

	for (i = 1; i <= a; i++) // 총 n행의 삼각형을 만듭니다.
	{
		for (j = 1; j < i; j++) 
			printf(" "); // 공백은 행이 늘어 날 때마다 1개씩 추가로 찍히게 됩니다.
		for (j = 0; j < 2 * a - k; j++)
			printf("*"); // *은 1행에 2*a-1개 2행에 2*a-2개 ... n행에 1개 2개식 줄어들면 찍힙니다. 

		k += 2; // 한 행이 끝나면 *이 2개씩 줄어들기 때문에 k = k + 2를 합니다.
		printf("\n"); // 한 행의 별 찍기가 끝나면 다음 행으로 넘어갑니다.
	}

	return 0;
}
------------------------------------------------------------------------------------
문제 C

#include<stdio.h>
#pragma warning(disable: 4996)

int main()
{
	int n, a, b, c, i, low = 1;

	scanf("%d", &n);  

	for (i = 0; i < n; i++) //입력한 n만큼 반복합니다.
	{
		scanf("%d %d %d", &a, &b, &c);

		if (a < 0 || a > 1000)
		{
			printf("%d %d", low, a); // a가 범위 밖일 때 그 줄과 a를 출력합니다
			break; // 그 이후의 계산은 무시하기 때문에 반복문을 탈출합니다. 
		}
		else if (b < 0 || b > 1000)
		{
			printf("%d %d", low, b); // b가 범위 밖일 때 그 줄과 b를 출력합니다
			break; // 그 이후의 계산은 무시하기 때문에 반복문을 탈출합니다. 
		}
		else if (c < 0 || c > 1000)
		{
			printf("%d %d", low, c); // c가 범위 밖일 때 그 줄과 c를 출력합니다
			break; // 그 이후의 계산은 무시하기 때문에 반복문을 탈출합니다. 
		}
		else
		{
			printf("%d\n", a + b + c); // a,b,c 모두 1~1000이므로 더해 출력합니다.
			low++; // 다음 줄로 넘어갈 때 줄의 갯수를 +1 합니다.
		}
	}
	return 0;
}
------------------------------------------------------------------------------------
문제 D
#include<stdio.h>
#pragma warning(disable: 4996)

int main()
{
	int n, cnt1 = 0, cnt2 = 0;

	while (1) // 계속 반복적으로 입력받습니다.
	{
		scanf("%d", &n); // 숫자를 입력받습니다.
		if (n == 0 || n < 0) // 0이나 음수가 입력되면 무한반복을 탈출합니다.
			break;

		cnt1++; // 반복 될 때마다 cnt1을 증가시킵니다.

		if (n > 0 && n < 101)
			cnt2++; // n이 0~100 사이 일 때만 cnt2를 증가시킵니다.
	}

	printf("%d %d", cnt1, cnt2);
	
	return 0;
}
------------------------------------------------------------------------------------
문제 E
#include<stdio.h>
#pragma warning(disable: 4996)

int main()
{
	int n, m = 0, cnt = 0, i; 

	scanf("%d", &n);

	while (n != 0) // n이 0이 되면 반복문을 멈춥니다.
	{
		m = m * 10 + n % 10; // 기존 저장 된 값에 10을 곱해 자리 수를 늘리고 n의 마지막 자리를 저장합니다. 
		n /= 10; // 저장된 마지막 자리를 버립니다.
	}

	for (i = 1; i <= m; i++) // i를 1부터 m까지 1씩 증가시키며 소수인지 아닌지 판별합니다. 
	{
		if (m % i == 0) // 나누어 떨어진다면 소수입니다.
			cnt++; // 소수일 때마다 cnt를 증가시킵니다.
	}

	printf("%d\n", m);
	printf("%d", cnt);

	return 0;
}
------------------------------------------------------------------------------------
문제 F
 #include<stdio.h>
#pragma warning(disable: 4996)

int main()
{
	int n, m = 0, cnt = 0, i = 2, a;

	scanf("%d", &n);


	while (1)
	{
		if (n % i == 0) // 나누어 떨어지면 인자입니다. 
		{
			cnt++; // 나누어 떨어질 때마다 계수를 1씩 증가시킵니다.
			a = i; // 인수를 a에 저장합니다.
			n = n / i; // n을 소수로 나누어 저장합니다.
		}
		else
		{
			if (cnt != 0) // cnt가 0이 아니면 이전에 소인수가 저장되어있단 뜻 이므로 인수와 계수를 출력합니다.
				printf("%d %d\n", a, cnt);
			i++; // 나누어 떨어지지 않았으므로 i를 증가시킵니다.
			cnt = 0; // i가 증가되므로 cnt를 0으로 초기화 합니다.
		
			if (i > n) // i가 n보다 커지면 계산이 끝난 것이므로 탈출합니다.
				break;
		}
	}

	return 0;
}